---
version: "3"

services:
  db_postgres:
    image: postgres:14.2
    restart: unless-stopped
    environment:
      POSTGRES_USER: "${RDBMS_AUTH_USER}"
      POSTGRES_PASSWORD: "${RDBMS_AUTH_PASS}"
      POSTGRES_DB: "${RDBMS_DATABASE}"
    volumes:
      - db-data-postgres:/var/lib/postgresql/data
    networks:
      - backend

  db_neo4j:
    image: neo4j:4.4.6-community
    restart: unless-stopped
    environment:
      NEO4J_AUTH: "${GRAPH_DB_AUTH_USER}/${GRAPH_DB_AUTH_PASSWORD}"
      NEO4J_dbms_memory_pagecache_size: 8G
      NEO4J_dbms_memory_heap_max__size: 8G
      NEO4J_dbms_default__listen__address: 0.0.0.0
      NEO4JLABS_PLUGINS: '["apoc", "graph-data-science"]'
    expose:
      - "7687"
    ports:
      - "${GRAPH_DB_PORT}:7687"
    volumes:
      - db-data-neo4j:/data
      - db-logs-neo4j:/logs
    networks:
      - backend

  frontend:
    restart: always
    ports:
      - "${FRONTEND_PORT}:8080"
    depends_on:
      - db_postgres
      - db_neo4j
    networks:
      - backend
      - frontend
    build:
      context: .
      dockerfile: ./Dockerfile

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

volumes:
  db-data-postgres:
  db-data-neo4j:
  db-logs-neo4j:

