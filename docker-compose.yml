---
version: "3"

services:
  db_postgres:
    image: postgres:14.2
    restart: unless-stopped
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASS}"
      POSTGRES_DB: "${POSTGRES_DB}"
    ports:
      - "${POSTGRES_PORT_EXT}:${POSTGRES_PORT}"
    expose:
      - "5432"
    volumes:
      - db-data-postgres:/var/lib/postgresql/data

  db_neo4j:
    image: neo4j:4.4.6-community
    restart: unless-stopped
    environment:
      NEO4J_AUTH: "${NEO4J_USER}/${NEO4J_PASS}"
      NEO4J_dbms_memory_pagecache_size: 16G
      NEO4J_dbms_memory_heap_max__size: 16G
      NEO4J_dbms_default__listen__address: 0.0.0.0
      NEO4JLABS_PLUGINS: '["apoc", "graph-data-science"]'
    expose:
      - "7687"
    ports:
      - "${NEO4J_PORT_EXT}:7687"
    volumes:
      - db-data-neo4j:/data
      - db-logs-neo4j:/logs

  # flask:
  #   restart: always
  #   ports:
  #     - "${FLASK_PORT_EXT}:${FLASK_PORT}"
  #   depends_on:
  #     - db_postgres
  #     - db_neo4j
  #   volumes:
  #     - ./frontend:/code
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile

  # tensorflow:
  #   restart: unless-stopped
  #   image: tensorflow/tensorflow:2.9.0-jupyter
  #   ports:
  #     - "${FLASK_PORT}:8888"
  #   depends_on:
  #     - db_postgres
  #     - db_neo4j
  #   networks:
  #     - backend
  #     - frontend

volumes:
  db-data-postgres:
  db-data-neo4j:
  db-logs-neo4j:

